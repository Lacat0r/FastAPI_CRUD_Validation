from fastapi import FastAPI
from pydantic import BaseModel, Field
from uuid import UUID
from typing import Optional

app = FastAPI()

class Book(BaseModel):
    id: UUID
    title: str = Field(min_length=1)
    author: str = Field(min_length=1, max_length=100)
    description: Optional[str] = Field(title = "Description of the book",max_length=100,min_length=1)
    rating:int = Field(gt=-1 , lt=101)

    class Config:
        schema_extra = {
            'example': {"id": '39640b51-77cc-4b1c-a184-aabd79a6k9ec',
                        'title': 'intro to software engineering',
                        'author': ' coding with mazen',
                        'description':'open book exam',
                        'rating':75
                        }
        }


BOOKS = []

@app.get("/")
async def read_all_books(books_to_return: Optional[int]=None):
    if len(BOOKS) < 1:
        create_books_no_api()

    if books_to_return and len(BOOKS) >= books_to_return >0:
        i = 1
        new_books = []
        while i<=books_to_return:
            new_books.append(BOOKS[i-1])
            i+=1
        return new_books
    return BOOKS

@app.get("/book/{book_id}")
async def read_book(book_id:UUID):
    for x in BOOKS:
        if x.id == book_id:
            return x


@app.post("/")
async def create_book(book: Book):
    BOOKS.append(book)
    return BOOKS

@app.put("/{book_id}")
async def update_book(book_id:UUID,book:Book):
    counter = 0
    for x in BOOKS:
        counter +=1
        if x.id == book_id:
            BOOKS[counter-1] = book
            return BOOKS[counter-1]

@app.delete("/{book_id}")
async def delete_book(book_id:UUID):
    counter = 0
    for x in BOOKS:
        counter += 1
        if x.id == book_id:
            del BOOKS[counter-1]
            return f'ID:{book_id}'

def create_books_no_api():
    book_1 = Book(id="39640b51-77cc-4b1c-a184-aabd79a6c9ec",
                 title="atomic habits",
                 author='george',
                 description='description1',
                 rating=90)

    book_2 = Book(id="36640b51-77cc-4b1c-a184-aabd79a6c9ec",
                 title="ttar",
                 author='mohammed',
                 description='description2',
                 rating=95)

    book_3 = Book(id="39647b51-77cc-4b1c-a184-aabd79a6c9ec",
                 title="48 rules of power",
                 author='mcvanie',
                 description='description3',
                 rating=75)

    book_4 = Book(id="39640b51-71cc-4b1c-a184-aabd79a6c9ec",
                 title="MBA",
                 author='felex',
                 description='Stanford mba',
                 rating=85)
    BOOKS.append(book_1)
    BOOKS.append(book_2)
    BOOKS.append(book_3)
    BOOKS.append(book_4)












